{"version":3,"file":"static/js/689.9ea02eae.chunk.js","mappings":"+VAEMA,EAAM,mCAGZC,EAAAA,EAAAA,SAAAA,QAAA,kCAGO,IAAMC,EAAgB,mCAAG,6GAELD,EAAAA,EAAAA,IAAA,mCAAsCD,IAFjC,cAEtBG,EAFsB,yBAGrBA,EAASC,KAAKC,SAHO,uCAK5BC,QAAQC,MAAM,sCALc,kBAMrB,IANqB,yDAAH,qDAUhBC,EAAgB,mCAAG,WAAMC,GAAN,gGAELR,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCAC+BS,EAD/B,gCAFK,cAEtBN,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,uCAO5BC,QAAQC,MAAM,sCAPc,kBAQrB,IARqB,yDAAH,sDAYhBG,EAAkB,mCAAG,WAAMC,GAAN,gGAEPV,EAAAA,EAAAA,IAAA,gBACZU,EADY,oBACOX,EADP,oBAFO,cAExBG,EAFwB,yBAKvBA,EAASC,MALc,uCAO9BE,QAAQC,MAAM,sCAPgB,kBAQvB,IARuB,yDAAH,sDAWxB,SAASK,EAAcC,GAC5B,OAAIA,EAAkB,GAAN,OAvCG,kCAuCH,YAA0BA,GACnC,kDACR,CAEM,IAAMC,EAAS,mCAAG,WAAMH,GAAN,gGAEEV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeX,EADf,oBAFF,cAEfG,EAFe,yBAKdA,EAASC,KAAKW,MALA,gCAOrBT,QAAQC,MAAM,sCAPO,yDAAH,sDAUTS,EAAU,mCAAG,WAAML,GAAN,gGAECV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeX,EADf,oBAFD,cAEhBG,EAFgB,yBAMfA,EAASC,KAAKC,SANC,gCAQtBC,QAAQC,MAAM,sCARQ,yDAAH,sDAWhB,SAASU,EAAQC,GACtB,GAAIA,EAEF,OADaA,EAAKC,MAAM,KAAK,EAGhC,C,mECvED,EAAkC,gC,SCErBC,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,UACrDC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,8IChBD,EAA4B,6BAA5B,EAAuE,+BAAvE,EAA2H,sCAA3H,EAA4L,4CAA5L,EAA4P,qC,SCI/OC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOvB,EAAP,KAAcwB,EAAd,KAgBA,OACE,iCACE,gBAAKZ,UAAWC,EAAhB,UACE,kBAAMS,SAbS,SAAAG,GACnBA,EAAMC,iBACNF,EAASC,EAAME,cAAcC,SAAS5B,MAAM6B,MAAMC,QAC7B,KAAjB9B,EAAM8B,QAIVR,EAAStB,GACTwB,EAAS,KAJPO,EAAAA,GAAAA,MAAY,2BAKf,EAImCnB,UAAWC,EAAzC,WACE,mBAAQmB,KAAK,SAASpB,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,uBAEF,kBACED,UAAWC,EACXmB,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,SA1BW,SAAAV,GACnBD,EAASC,EAAME,cAAcE,MAAMO,cACpC,EAyBSP,MAAO7B,EACPqC,WAAS,EACTC,YAAY,iCAIlB,SAAC,KAAD,CAASC,SAAS,gBAGvB,E,iBC3CD,GAAgB,aAAe,6BAA6B,aAAe,8BC0E3E,EAnEe,WAAO,IAAD,EACbC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BlB,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOmB,EAAP,KAAcC,EAAd,KACA,GAAkCpB,EAAAA,EAAAA,WAAS,GAA3C,eAAOqB,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAqC3C,OA9BAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,oGAEIN,GAAa,GAFjB,UAGwB9C,EAAAA,EAAAA,IAAiBkD,GAHzC,QAGUP,EAHV,QAIcU,OAAS,IACjBT,EACED,EAAMW,KAAI,SAAAC,GAAI,MAAK,CACjBC,GAAID,EAAKC,GACTC,MAAOF,EAAKG,eACZxB,KAAMqB,EAAKE,MACXE,SAAUJ,EAAKI,SACfC,QAASL,EAAKM,aALF,KAQhBf,GAAa,IAdnB,gDAiBId,EAAAA,GAAAA,MACE,6DAEFc,GAAa,GApBjB,0DAJc,sBACA,KAAVI,GADU,mCA2BdY,EACD,GAAE,CAACZ,KAGF,iCACE,iBAAKrC,UAAWC,EAAAA,gBAAhB,WACE,SAACQ,EAAD,CAAWC,SAtCG,SAAAtB,GAElBgD,EAD8B,KAAVhD,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEjD,KAoCK,SAAC,KAAD,CAASuC,SAAS,cACjBG,EAAMU,OAAS,IACd,eAAIxC,UAAWC,EAAAA,aAAf,gBACG6B,QADH,IACGA,OADH,EACGA,EAAOW,KAAI,SAAAC,GAAI,OACd,yBACE,SAAC,KAAD,CACEQ,GAAE,kBAAaR,EAAKC,IACpBQ,MAAO,CAAEC,KAAMxB,GACf5B,UAAWC,EAAAA,aAHb,SAKGyC,EAAKE,SANDF,EAAKC,GADA,SAcrBX,IAAa,SAACjC,EAAA,EAAD,MAGnB,C","sources":["components/Api/apiService.js","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '67eb25e753339c339c2207d6264e77e1';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = `\nhttps://api.themoviedb.org/3/`;\n\nexport const searchTrendFilms = async () => {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const searchFilmByName = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const getFilmInformation = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\nexport function getPosterFilm(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\nexport const getActors = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"loader_position\":\"Loader_loader_position__EoZju\"};","import { Bars } from 'react-loader-spinner';\nimport css from '../Loader/Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader_position}>\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__xBucJ\",\"search_form\":\"SearchBar_search_form__JD4pT\",\"search_form_button\":\"SearchBar_search_form_button__74pXE\",\"search_form_button_label\":\"SearchBar_search_form_button_label__KBu-s\",\"search_form_input\":\"SearchBar_search_form_input__wqg06\",\"SearchForm-input\":\"SearchBar_SearchForm-input__pGYri\"};","import { useState } from 'react';\nimport { toast, Toaster } from 'react-hot-toast';\nimport css from '../SearchBar/SearchBar.module.css';\nimport { PropTypes } from 'prop-types';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handelChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setQuery(event.currentTarget.elements.query.value.trim());\n    if (query.trim() === '') {\n      toast.error('Pleas enter search word!');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <>\n      <div className={css.searchbar}>\n        <form onSubmit={handleSubmit} className={css.search_form}>\n          <button type=\"submit\" className={css.search_form_button}>\n            <span className={css.search_form_button_label}>Search</span>\n          </button>\n          <input\n            className={css.search_form_input}\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            onChange={handelChange}\n            value={query}\n            autoFocus\n            placeholder=\"Enter your search name\"\n          />\n        </form>\n      </div>\n      <Toaster position=\"top-right\" />\n    </>\n  );\n};\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies__list\":\"Movies_movies__list__+pxmY\",\"movies__item\":\"Movies_movies__item__blLkN\"};","import { searchFilmByName } from 'components/Api/apiService';\nimport { Loader } from 'components/Loader/Loader';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport css from '../Movies/Movies.module.css';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [films, setFilms] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('query') ?? '';\n\n  const changeQuery = query => {\n    const searchMovie = query !== '' ? { query } : {};\n    setSearchParams(searchMovie);\n  };\n\n  useEffect(() => {\n    if (movie === '') {\n      return;\n    }\n    async function searchFilm() {\n      try {\n        setIsLoading(true);\n        const films = await searchFilmByName(movie);\n        if (films.length > 0) {\n          setFilms(\n            films.map(film => ({\n              id: film.id,\n              title: film.original_title,\n              name: film.title,\n              overview: film.overview,\n              release: film.release_date,\n            }))\n          );\n          setIsLoading(false);\n        }\n      } catch {\n        toast.error(\n          'Pleas wait a few minutes, we are repairing the website...'\n        );\n        setIsLoading(false);\n      }\n    }\n    searchFilm();\n  }, [movie]);\n\n  return (\n    <>\n      <div className={css.movies__wrapper}>\n        <SearchBar onSubmit={changeQuery} />\n        <Toaster position=\"top-right\" />\n        {films.length > 0 && (\n          <ul className={css.movies__list}>\n            {films?.map(film => (\n              <li key={film.id}>\n                <Link\n                  to={`/movies/${film.id}`}\n                  state={{ from: location }}\n                  className={css.movies__item}\n                >\n                  {film.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      {isLoading && <Loader />}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["KEY","axios","searchTrendFilms","response","data","results","console","error","searchFilmByName","query","getFilmInformation","movieId","getPosterFilm","posterPath","getActors","cast","getReviews","getDate","date","split","Loader","className","css","height","width","colors","ariaLabel","wrapperStyle","wrapperClass","visible","SearchBar","onSubmit","useState","setQuery","event","preventDefault","currentTarget","elements","value","trim","toast","type","name","autoComplete","onChange","toLowerCase","autoFocus","placeholder","position","location","useLocation","films","setFilms","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movie","get","useEffect","length","map","film","id","title","original_title","overview","release","release_date","searchFilm","to","state","from"],"sourceRoot":""}