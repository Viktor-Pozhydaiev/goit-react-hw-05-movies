{"version":3,"file":"static/js/936.352921e7.chunk.js","mappings":"+VAEMA,EAAM,mCAGZC,EAAAA,EAAAA,SAAAA,QAAA,kCAGO,IAAMC,EAAgB,mCAAG,6GAELD,EAAAA,EAAAA,IAAA,mCAAsCD,IAFjC,cAEtBG,EAFsB,yBAGrBA,EAASC,KAAKC,SAHO,uCAK5BC,QAAQC,MAAM,sCALc,kBAMrB,IANqB,yDAAH,qDAUhBC,EAAgB,mCAAG,WAAMC,GAAN,gGAELR,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCAC+BS,EAD/B,gCAFK,cAEtBN,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,uCAO5BC,QAAQC,MAAM,sCAPc,kBAQrB,IARqB,yDAAH,sDAYhBG,EAAkB,mCAAG,WAAMC,GAAN,gGAEPV,EAAAA,EAAAA,IAAA,gBACZU,EADY,oBACOX,EADP,oBAFO,cAExBG,EAFwB,yBAKvBA,EAASC,MALc,uCAO9BE,QAAQC,MAAM,sCAPgB,kBAQvB,IARuB,yDAAH,sDAWxB,SAASK,EAAcC,GAC5B,OAAIA,EAAkB,GAAN,OAvCG,kCAuCH,YAA0BA,GACnC,kDACR,CAEM,IAAMC,EAAS,mCAAG,WAAMH,GAAN,gGAEEV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeX,EADf,oBAFF,cAEfG,EAFe,yBAKdA,EAASC,KAAKW,MALA,gCAOrBT,QAAQC,MAAM,sCAPO,yDAAH,sDAUTS,EAAU,mCAAG,WAAML,GAAN,gGAECV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeX,EADf,oBAFD,cAEhBG,EAFgB,yBAMfA,EAASC,KAAKC,SANC,gCAQtBC,QAAQC,MAAM,sCARQ,yDAAH,sDAWhB,SAASU,EAAQC,GACtB,GAAIA,EAEF,OADaA,EAAKC,MAAM,KAAK,EAGhC,C,6ICvED,EAA6B,yBAA7B,EAAmE,yB,SC4CnE,EAvCa,WACX,OAA+BC,EAAAA,EAAAA,UAAS,IAAxC,eAAOC,EAAP,KAAcC,EAAd,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEwBrB,EAAAA,EAAAA,MAFxB,QAEUmB,EAFV,QAGcG,OAAS,GACjBF,EACED,EAAMI,KAAI,SAAAC,GAAI,MAAK,CACjBC,GAAID,EAAKC,GACTC,MAAOF,EAAKG,eACZC,KAAMJ,EAAKI,KAHC,KALtB,gDAaIC,EAAAA,GAAAA,MACE,6DAdN,0DADc,uBAAC,WAAD,wBAmBdC,EACD,GAAE,KAED,+BACE,gBAAIC,UAAWC,EAAf,WACE,wCADF,OAEGb,QAFH,IAEGA,OAFH,EAEGA,EAAOI,KAAI,SAAAC,GAAI,OACd,yBACE,SAAC,KAAD,CAAMS,GAAE,kBAAaT,EAAKC,IAAMM,UAAWC,EAA3C,SACGR,EAAKE,OAASF,EAAKI,QAFfJ,EAAKC,GADA,QAUvB,C","sources":["components/Api/apiService.js","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '67eb25e753339c339c2207d6264e77e1';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = `\nhttps://api.themoviedb.org/3/`;\n\nexport const searchTrendFilms = async () => {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const searchFilmByName = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const getFilmInformation = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\nexport function getPosterFilm(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\nexport const getActors = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"home__list\":\"Home_home__list__3ZqPZ\",\"home__item\":\"Home_home__item__lDeQx\"};","import { searchTrendFilms } from 'components/Api/apiService';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Link } from 'react-router-dom';\nimport css from '../Home/Home.module.css';\n\nconst Home = () => {\n  const [films, setTrendFilms] = useState([]);\n\n  useEffect(() => {\n    async function getFilms() {\n      try {\n        const films = await searchTrendFilms();\n        if (films.length > 0) {\n          setTrendFilms(\n            films.map(film => ({\n              id: film.id,\n              title: film.original_title,\n              name: film.name,\n            }))\n          );\n        }\n      } catch {\n        toast.error(\n          'Pleas wait a few minutes, we are repairing the website...'\n        );\n      }\n    }\n    getFilms();\n  }, []);\n  return (\n    <>\n      <ul className={css.home__list}>\n        <h1>Trend Films</h1>\n        {films?.map(film => (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} className={css.home__item}>\n              {film.title || film.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Home;\n"],"names":["KEY","axios","searchTrendFilms","response","data","results","console","error","searchFilmByName","query","getFilmInformation","movieId","getPosterFilm","posterPath","getActors","cast","getReviews","getDate","date","split","useState","films","setTrendFilms","useEffect","length","map","film","id","title","original_title","name","toast","getFilms","className","css","to"],"sourceRoot":""}