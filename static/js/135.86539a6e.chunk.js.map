{"version":3,"file":"static/js/135.86539a6e.chunk.js","mappings":"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","sources":["components/Api/apiService.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '67eb25e753339c339c2207d6264e77e1';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = `\nhttps://api.themoviedb.org/3/`;\n\nexport const searchTrendFilms = async () => {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const searchFilmByName = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const getFilmInformation = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\nexport function getPosterFilm(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\nexport const getActors = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movies__detail__section\":\"MovieDetails_movies__detail__section__3Q6Ws\",\"back__link\":\"MovieDetails_back__link__KHpKb\",\"movies__title__wrapper\":\"MovieDetails_movies__title__wrapper__6OJ8o\",\"movies_link_wrapper\":\"MovieDetails_movies_link_wrapper__GHEZE\",\"cast__link\":\"MovieDetails_cast__link__lFePs\",\"cast__text\":\"MovieDetails_cast__text__nhNUK\",\"reviews__text\":\"MovieDetails_reviews__text__QwGwP\"};","import {\n  getDate,\n  getFilmInformation,\n  getPosterFilm,\n} from 'components/Api/apiService';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from '../MovieDetails/MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [filmInfo, setFilmInfo] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function filmDetails() {\n      try {\n        const filmInfo = await getFilmInformation(movieId);\n        setFilmInfo(filmInfo);\n      } catch {\n        toast.error(\n          'Pleas wait a few minutes, we are repairing the website...'\n        );\n      }\n    }\n    filmDetails();\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    release_date,\n    overview,\n    genres,\n  } = filmInfo;\n  return (\n    <div className={css.movies__detail__section}>\n      <Link to={backLink} className={css.back__link}>\n        Go back\n      </Link>\n\n      <div className={css.movies__description__wrapper}>\n        <p>\n          Title: {original_title}\n          <span>({getDate(release_date)})</span>\n        </p>\n        <img\n          src={getPosterFilm(poster_path)}\n          alt={original_title}\n          className={css.movies__img}\n        />\n        <div className={css.movies__title__wrapper}>\n          <p>Overview: {overview}</p>\n          <p>Use Score: {Math.round(vote_average * 10)}%</p>\n          {overview ? (\n            <p>Genre: {genres.map(genre => genre.name).join(', ')}</p>\n          ) : (\n            <p>Sorry we are cant found genres info</p>\n          )}\n        </div>\n      </div>\n\n      <div className={css.movies_link_wrapper}>\n        <Link to={'cast'} state={{ from: backLink }} className={css.cast__link}>\n          <p className={css.cast__text}>Cast</p>\n        </Link>\n        <Link\n          to={'reviews'}\n          state={{ from: backLink }}\n          className={css.reviews__link}\n        >\n          <p className={css.reviews__text}>Reviews</p>\n        </Link>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["KEY","axios","searchTrendFilms","response","data","results","console","error","searchFilmByName","query","getFilmInformation","movieId","getPosterFilm","posterPath","getActors","cast","getReviews","getDate","date","split","useState","filmInfo","setFilmInfo","useParams","backLink","useLocation","state","from","useEffect","toast","filmDetails","poster_path","original_title","vote_average","release_date","overview","genres","className","css","to","src","alt","Math","round","map","genre","name","join"],"sourceRoot":""}