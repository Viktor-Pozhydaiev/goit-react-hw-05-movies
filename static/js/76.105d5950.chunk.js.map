{"version":3,"file":"static/js/76.105d5950.chunk.js","mappings":"8VAEMA,EAAM,mCAGZC,EAAAA,EAAAA,SAAAA,QAAA,kCAGO,IAAMC,EAAgB,mCAAG,6GAELD,EAAAA,EAAAA,IAAA,mCAAsCD,IAFjC,cAEtBG,EAFsB,yBAGrBA,EAASC,KAAKC,SAHO,uCAK5BC,QAAQC,MAAM,sCALc,kBAMrB,IANqB,yDAAH,qDAUhBC,EAAgB,mCAAG,WAAMC,GAAN,gGAELR,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCAC+BS,EAD/B,gCAFK,cAEtBN,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,uCAO5BC,QAAQC,MAAM,sCAPc,kBAQrB,IARqB,yDAAH,sDAYhBG,EAAkB,mCAAG,WAAMC,GAAN,gGAEPV,EAAAA,EAAAA,IAAA,gBACZU,EADY,oBACOX,EADP,oBAFO,cAExBG,EAFwB,yBAKvBA,EAASC,MALc,uCAO9BE,QAAQC,MAAM,sCAPgB,kBAQvB,IARuB,yDAAH,sDAWxB,SAASK,EAAcC,GAC5B,OAAIA,EAAkB,GAAN,OAvCG,kCAuCH,YAA0BA,GACnC,kDACR,CAEM,IAAMC,EAAS,mCAAG,WAAMH,GAAN,gGAEEV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeX,EADf,oBAFF,cAEfG,EAFe,yBAKdA,EAASC,KAAKW,MALA,gCAOrBT,QAAQC,MAAM,sCAPO,yDAAH,sDAUTS,EAAU,mCAAG,WAAML,GAAN,gGAECV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeX,EADf,oBAFD,cAEhBG,EAFgB,yBAMfA,EAASC,KAAKC,SANC,gCAQtBC,QAAQC,MAAM,sCARQ,yDAAH,sDAWhB,SAASU,EAAQC,GACtB,GAAIA,EAEF,OADaA,EAAKC,MAAM,KAAK,EAGhC,C,6ICvED,EAAsC,kC,SCiDtC,EA5Ca,WACX,IAAQR,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBV,EAAAA,EAAAA,IAAUH,GAFnC,QAEUW,EAFV,QAGeG,OAAS,GAClBF,EAAUD,GAJhB,gDAOII,EAAAA,GAAAA,MACE,6DARN,0DADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAAChB,KAGF,gCACGW,EAAOG,OAAS,GACf,wBACGH,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACV,2BACE,gBACEC,KAAKrB,EAAAA,EAAAA,IAAckB,GACnBI,IAAKH,EACLI,UAAWC,KAEb,kCAAUL,MACV,uCAAeC,OAPRH,EADC,MAad,4CAEF,SAAC,KAAD,MAGL,C","sources":["components/Api/apiService.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '67eb25e753339c339c2207d6264e77e1';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = `\nhttps://api.themoviedb.org/3/`;\n\nexport const searchTrendFilms = async () => {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const searchFilmByName = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const getFilmInformation = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\nexport function getPosterFilm(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\nexport const getActors = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"actor__img__wrapper\":\"Cast_actor__img__wrapper__GS3U8\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { getActors, getPosterFilm } from 'components/Api/apiService';\nimport css from '../Cast/Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    async function getActorsById() {\n      try {\n        const actors = await getActors(movieId);\n        if (actors.length > 0) {\n          setActors(actors);\n        }\n      } catch {\n        toast.error(\n          'Pleas wait a few minutes, we are repairing the website...'\n        );\n      }\n    }\n    getActorsById();\n  }, [movieId]);\n\n  return (\n    <>\n      {actors.length > 0 ? (\n        <ul>\n          {actors.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={getPosterFilm(profile_path)}\n                alt={name}\n                className={css.actor__img__wrapper}\n              />\n              <p>Name: {name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        \"Unfortunately we didn't find anything...\"\n      )}\n      <Toaster />\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["KEY","axios","searchTrendFilms","response","data","results","console","error","searchFilmByName","query","getFilmInformation","movieId","getPosterFilm","posterPath","getActors","cast","getReviews","getDate","date","split","useParams","useState","actors","setActors","useEffect","length","toast","getActorsById","map","id","profile_path","name","character","src","alt","className","css"],"sourceRoot":""}