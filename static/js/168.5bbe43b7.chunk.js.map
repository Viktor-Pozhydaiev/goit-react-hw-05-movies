{"version":3,"file":"static/js/168.5bbe43b7.chunk.js","mappings":"+VAEMA,EAAM,mCAGZC,EAAAA,EAAAA,SAAAA,QAAA,kCAGO,IAAMC,EAAgB,mCAAG,6GAELD,EAAAA,EAAAA,IAAA,mCAAsCD,IAFjC,cAEtBG,EAFsB,yBAGrBA,EAASC,KAAKC,SAHO,uCAK5BC,QAAQC,MAAM,sCALc,kBAMrB,IANqB,yDAAH,qDAUhBC,EAAgB,mCAAG,WAAMC,GAAN,gGAELR,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCAC+BS,EAD/B,gCAFK,cAEtBN,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,uCAO5BC,QAAQC,MAAM,sCAPc,kBAQrB,IARqB,yDAAH,sDAYhBG,EAAkB,mCAAG,WAAMC,GAAN,gGAEPV,EAAAA,EAAAA,IAAA,gBACZU,EADY,oBACOX,EADP,oBAFO,cAExBG,EAFwB,yBAKvBA,EAASC,MALc,uCAO9BE,QAAQC,MAAM,sCAPgB,kBAQvB,IARuB,yDAAH,sDAWxB,SAASK,EAAcC,GAC5B,OAAIA,EAAkB,GAAN,OAvCG,kCAuCH,YAA0BA,GACnC,kDACR,CAEM,IAAMC,EAAS,mCAAG,WAAMH,GAAN,gGAEEV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeX,EADf,oBAFF,cAEfG,EAFe,yBAKdA,EAASC,KAAKW,MALA,gCAOrBT,QAAQC,MAAM,sCAPO,yDAAH,sDAUTS,EAAU,mCAAG,WAAML,GAAN,gGAECV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeX,EADf,oBAFD,cAEhBG,EAFgB,yBAMfA,EAASC,KAAKC,SANC,gCAQtBC,QAAQC,MAAM,sCARQ,yDAAH,sDAWhB,SAASU,EAAQC,GACtB,GAAIA,EAEF,OADaA,EAAKC,MAAM,KAAK,EAGhC,C,mECvED,EAAkC,gC,SCErBC,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,UACrDC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,uJChBD,GAAgB,iBAAmB,kCAAkC,eAAiB,iC,SCqDtF,EA/CgB,WACd,IAAQlB,GAAYmB,EAAAA,EAAAA,MAAZnB,QACR,GAA8BoB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAqBA,IAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAG0BnB,EAAAA,EAAAA,IAAWL,GAHrC,QAGUqB,EAHV,QAIgBK,OAAS,IACnBJ,EAAWD,GACXG,GAAa,IANnB,gDASIG,EAAAA,GAAAA,MACE,6DAEFH,GAAa,GAZjB,0DADc,uBAAC,WAAD,wBAgBdI,EACD,GAAE,CAAC5B,IAECqB,EAIL,OACE,gCACsB,IAAnBA,EAAQK,OACP,4CAEA,gBAAKhB,UAAWC,EAAAA,iBAAhB,SACGU,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,4BACE,gBAAItB,UAAWC,EAAAA,eAAf,qBAA4CmB,MAC5C,eAAGpB,UAAWC,EAAAA,iBAAd,sBAA8CoB,OAFtCC,EADC,OAQjB,SAAC,KAAD,IACCT,IAAa,SAACd,EAAA,EAAD,MAGnB,C","sources":["components/Api/apiService.js","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '67eb25e753339c339c2207d6264e77e1';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = `\nhttps://api.themoviedb.org/3/`;\n\nexport const searchTrendFilms = async () => {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const searchFilmByName = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\n\nexport const getFilmInformation = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch {\n    console.error('Please wait, we are repair problem');\n    return [];\n  }\n};\nexport function getPosterFilm(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\nexport const getActors = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.results;\n  } catch {\n    console.error('Please wait, we are repair problem');\n  }\n};\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"loader_position\":\"Loader_loader_position__EoZju\"};","import { Bars } from 'react-loader-spinner';\nimport css from '../Loader/Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader_position}>\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews__wrapper\":\"Reviews_reviews__wrapper__Y5Oj3\",\"reviews__title\":\"Reviews_reviews__title__+XJ8d\"};","import { getReviews } from 'components/Api/apiService';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport css from '../Reviews/Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function givReviews() {\n      try {\n        setIsLoading(true);\n        const reviews = await getReviews(movieId);\n        if (reviews.length > 0) {\n          setReviews(reviews);\n          setIsLoading(false);\n        }\n      } catch {\n        toast.error(\n          'Pleas wait a few minutes, we are repairing the website...'\n        );\n        setIsLoading(false);\n      }\n    }\n    givReviews();\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        \"Unfortunately we didn't find anything...\"\n      ) : (\n        <div className={css.reviews__wrapper}>\n          {reviews.map(({ author, content, id }) => (\n            <div key={id}>\n              <h3 className={css.reviews__title}>Author: {author}</h3>\n              <p className={css.reviews__content}>Content: {content}</p>\n            </div>\n          ))}\n        </div>\n      )}\n      <Toaster />\n      {isLoading && <Loader />}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["KEY","axios","searchTrendFilms","response","data","results","console","error","searchFilmByName","query","getFilmInformation","movieId","getPosterFilm","posterPath","getActors","cast","getReviews","getDate","date","split","Loader","className","css","height","width","colors","ariaLabel","wrapperStyle","wrapperClass","visible","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","length","toast","givReviews","map","author","content","id"],"sourceRoot":""}